//Longest Common subsequence  

#include<bits/stdc++.h>
#include<algorithm>

#define diag 1
#define up 2
#define left 3

using namespace std;

int main()
{
    string str,str2;
    cin>>str;
    cin>>str2;
    int i,j,len1,len2;
    len1= str.size();
    len2= str2.size();

    int mat[len1+1][len2+1];
    for(i=0;i<=len1;i++){
        mat[i][0]=0;
    }
    for(j=0;j<=len2;j++){
        mat[0][j]=0;
    }
    for(i=1;i<=len1;i++){
        for(j=1;j<=len2;j++){
            if(str[i-1]==str2[j-1]){
                mat[i][j] = mat[i-1][j-1]+1;
            }
            else{
                mat[i][j] = max(mat[i-1][j],mat[i][j-1]);
            }
        }
    }
    string st="";
    while(i>0  && j>0){
        if(str[i-1] == str2[j-1] ){
            st+= str[i-1];
            i--;
            j--;
        }
        else if(mat[i-1][j]>=mat[i][j-1]){
            i--;
        }
        else
        {
            j--;
        }
    }

    reverse(st.begin(),st.end());
    cout<<st<<endl;

    cout<<"LCS length "<<mat[len1][len2]<<endl;
    return 0;
}
